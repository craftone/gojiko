@startuml seqCSreqSgw

Client -> API : POST sessions(\n\
  PGW Ctrl Addr,\n\
  IMSI, MSISDN, etc\n\
)

API -> SgwCtrl : CreateSession(\n\
  APN,\n\
  IMSI, MSISDN, etc\n\
)

SgwCtrl -> ApnRepo : Query(APN)
SgwCtrl <-- ApnRepo : pgwCtrlIPAddr
note right: 1APNに複数のIPがある場合は\nCyclicに1つだけ応答する

SgwCtrl -> SgwCtrl : find OpPgwCtrl and the UDPconn
opt when No OpPgwCtrl
  SgwCtrl -> OpPgwCtrl : make(PgwCtrlAddr)
  OpPgwCtrl -> OpPgwCtrl : make a UDPconn
  SgwCtrl <-- OpPgwCtrl

end

SgwCtrl -> GtpSessionsRepo : newSession(\n\
  PgwCtrlIP,\n\
  IMSI, MSISDN, etc\n\
  SgwCtrlSendChan,\n\
  SGW Ctrl F-TEID,\n\
  SGW Data F-TEID,\n\
)

GtpSessionsRepo -> GtpSessionsRepo : make a GtpSession(\n\
  SessionID for new sess,\n\
  CmdChan for new sess,\n\
  SgwCtrlSendChan,\n\
  SgwCtrlRecvChan for new sess\n\
)

GtpSessionsRepo -> GtpSessionsRepo : ADD TO map[SessionID]session


GtpSessionsRepo -> GtpSessionRoutine : go!(session)
activate GtpSessionRoutine
GtpSessionsRepo <-- GtpSessionRoutine

GtpSessionRoutine -> GtpSessionRoutine : Status:Idle
SgwCtrl <-- GtpSessionsRepo : SessionID, CmdChan

GtpSessionRoutine -> GtpSessionRoutine : Wait a CMD
SgwCtrl -> GtpSessionRoutine : <<cmdChan>>\n CSReq
SgwCtrl -> SgwCtrl : Wait Chan result

GtpSessionRoutine -> GtpSessionRoutine : Status:CSReqSending
activate GtpSessionRoutine #FFBBBB

GtpSessionRoutine -> SgwCtrl : NextSeq()
GtpSessionRoutine <-- SgwCtrl : Seq

GtpSessionRoutine -> SgwCtrlSender : <<sgwCtrlSendChan>>\n Dst, MsgBin

SgwCtrlSender -> SgwCtrlSender : Send a UDP packet

GtpSessionRoutine -> GtpSessionRoutine : Wait receive (Seq) \n or timeout / retry

SgwCtrlReceiver -> SgwCtrlReceiver : Read a UDP packet
SgwCtrlReceiver -> GtpSessionsRepo : Find (SgwCtrlFTEID)
SgwCtrlReceiver <-- GtpSessionsRepo : SgwCtrlRecvChan for the session
SgwCtrlReceiver -> GtpSessionRoutine : <<sgwRecvChan>> Remote, MsgBin
SgwCtrl <- GtpSessionRoutine : <<cmdChan>> CSReq result

GtpSessionRoutine -> GtpSessionRoutine : Status:Connected
deactivate GtpSessionRoutine

API <-- SgwCtrl : result
Client <-- API : result


@enduml
